using CloudSync.Exceptions.Business;
using CloudSync.Modules.UserManagement.Services.Interfaces;
using Google.Apis.Auth;
using Shared.Requests.UserManagement;

namespace CloudSync.Modules.UserManagement.Services;

public class GoogleTokenValidator(IConfiguration configuration) : IGoogleTokenValidator
{
    private readonly IConfigurationSection _jwtSettings = configuration.GetSection("JWT");
    
    // Accepts an ID token generated by the frontend login process when a client successfully logins in with their
    // Google account. This tests the ID token against the Google Auth API and returns data about a user's Google account.
    // Returned data includes the Full Name, First and Last Name, Email, Subject (Google User ID string), the time the
    // token was issued at, time before expiration, and information about the Audience, Issuer, and Authorized party.
    public async Task<GoogleJsonWebSignature.Payload> ValidateAsync(GoogleLoginRequest request)
    {
        try
        {
            var settings = new GoogleJsonWebSignature.ValidationSettings
            {
                Audience = [_jwtSettings["Audience"]]
            };

            return await GoogleJsonWebSignature.ValidateAsync(request.IdToken, settings);
        }
        catch (InvalidJwtException e) when (e.Message.Contains("expired"))
        {
            throw new AuthenticationException("Google ID token has expired.");
        }
        catch (InvalidJwtException)
        {
            throw new AuthenticationException("Invalid Google id token");
        }
    }
}